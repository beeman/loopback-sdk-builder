/* tslint:disable */
import { Action } from '@ngrx/store';
import { type } from '../util';
import { BaseLoopbackActionTypesFactory, BaseLoopbackActionsFactory } from './base';
import { SDKToken, User } from '../models';

export const UserActionTypes = Object.assign(BaseLoopbackActionTypesFactory('User'), {
  /**
   * @author João Ribeiro <@JonnyBGod> <github:JonnyBGod>
   * @description
   * User specific action types
   */
  LOGIN: type('[User] Login user'),
  LOGIN_SUCCESS: type('[User] Login user success'),
  LOGIN_FAIL: type('[User] Login user fail'),

  REGISTER: type('[User] Register user'),
  REGISTER_SUCCESS: type('[User] Register user success'),
  REGISTER_FAIL: type('[User] Register user fail'),

  LOGOUT: type('[User] Logout user'),
  LOGOUT_SUCCESS: type('[User] Logout user success'),
  LOGOUT_FAIL: type('[User] Logout user fail'),
});

/**
 * @author João Ribeiro <@JonnyBGod> <github:JonnyBGod>
 * @description
 * User specific actions
 */
class login implements Action {
  public readonly type = UserActionTypes.LOGIN;

  constructor(public payload: any) { }
}

class loginSuccess implements Action {
  public readonly type = UserActionTypes.LOGIN_SUCCESS;

  constructor(public payload: SDKToken) { }
}

class loginFail implements Action {
  public readonly type = UserActionTypes.LOGIN_FAIL;

  constructor(public payload: any) { }
}

class register implements Action {
  public readonly type = UserActionTypes.REGISTER;

  constructor(public payload: any) { }
}

class registerSuccess implements Action {
  public readonly type = UserActionTypes.REGISTER_SUCCESS;

  constructor(public payload: SDKToken) { }
}

class registerFail implements Action {
  public readonly type = UserActionTypes.REGISTER_FAIL;

  constructor(public payload: any) { }
}

class logout implements Action  {
  public readonly type = UserActionTypes.LOGOUT;
}

class logoutSuccess implements Action  {
  public readonly type = UserActionTypes.LOGOUT_SUCCESS;
}

class logoutFail implements Action  {
  public readonly type = UserActionTypes.LOGOUT_FAIL;

  constructor(public payload: any) { }
}

export const UserActions = Object.assign(BaseLoopbackActionsFactory<User>('User', UserActionTypes), {
  login,
  loginSuccess,
  loginFail,
  register,
  registerSuccess,
  registerFail,
  logout,
  logoutSuccess,
  logoutFail,
});
